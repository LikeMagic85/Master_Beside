package com.likemagic.masters_beside.repository

import kotlin.concurrent.thread

class ProfessionGetter {
        fun getAllProfession() = listOf(
            Profession(
                "Строитель", listOf("Строитель", "Построить","Коттеджное строительство", "Залить стяжку","Залить фундамент", "Строительно-монтажные работы"
                )
            ),
            Profession(
                "Сантехник", listOf("Сантехника", "Слесарные работы", "Монтаж сантехники", "Полипропилен", "Трубы", "Кран", "Смеситель","Канализация", "Водоснабжения", "Сантехнические работы", "Аварийно-восстановительные работы")
            ),
            Profession(
                "Водитель", listOf("Водитель", "Автомобильные перевозки", "Перевозки", "Грузоперевозки", "Автомобиль", "Личный автомобиль", "Вождение автомобиля", "Грузовой транспорт")
            ),
            Profession(
                "Разнорабочий", listOf("Разнорабочий", "Покосить", "Помочь", "")
            ),
            Profession("Электрик", listOf("Электрик", "Электротехнические работы", "Проводка", "Электрика", "Электрооборудования", "Электромонтажные работы", "Монтаж электрики", "Электрические сети", "Слаботочные системы", "Электросхемы", "Энергетика")),
            Profession("Кровельщик", listOf("Кровельщик", "Накрыть крышу", "Сделать крышу", "Кровельные работы")),
            Profession("Токарь", listOf("Токарь","Токарные работы", "Выточить", "Расточить")),
            Profession("Автомеханик", listOf("Автомеханик", "Ремонт автомобиля", "Сделать автомобиль", "Полировка", "Автослесарь")),
            Profession("Каменщик", listOf("Каменщик", "Положить кирпич","Положить блоки","Положить кладку",)),
            Profession("Маляр", listOf("Маляр", "Малярные работы")),
            Profession("Плотник", listOf("Плотник", "Плотницкие работы")),
            Profession("Сварщик", listOf("Сварщик", "Сварочные работы", "Сварить", "Заварить", "Подварить", "Сварка")),
            Profession("Столяр", listOf("Столяр", "Деревообработка", "Работа с деревом")),
            Profession("Швея", listOf("Швея", "Сшить", "Шитье", "Пошив", "Пошив одежды")),
            Profession("Фотограф", listOf("Фотограф", "Фотосессия", "Сделать фото", "Пофотографировать", "Фотография", "Портретная фотосъемка", "Фотосъемка", "Студийная фотосъемка", "Ретушь", "Фотомонтаж", "Обработка фото", "Фото", "Фотошоп", "Съемка")),
            Profession("Визажист", listOf("Визажист", "Сделать макияж", "Коррекция бровей", "Окрашивание бровей", "Окрашивание ресниц", "Брови", "Ресницы", "Макияж", "Ламинирование ресниц", "Архитектура бровей", "Наращивание ресниц", "Ламинирование бровей")),
            Profession("Копирайтер", listOf("Копирайтер", "Написание текстов", "Написать текст", "Написание статей", "Статья", "Рерайтинг", "Наполнить контент", "Редактировать текст", "Работа с текстом")),
            Profession("Модельер", listOf("Модельер", "Дизайн одежды", "Моделирование", "Мода", "Одежда", "Моделирование одежды")),
            Profession("Художник", listOf("Художник", "Нарисовать", "Рисунок")),
            Profession("Ювелир", listOf("Ювелир", "Сделать кольцо", "Сделать цепочку", "Сделать браслет", "Спаять", "Ювелирные изделия", "Полировка")),
            Profession("Бухгалтер", listOf("Бухгалтер", "Бухучет", "Дебет", "Бухгалтерская отчетность", "Налоговая отчетность", "1с: бухгалтерия", "Отчетность")),
            Profession("Ветеринар", listOf("Ветеринар", "Вылечить собаку", "Вылечить кошку", "Вылечить животное")),
            Profession("Нотариус", listOf("Нотариус","Услуги нотариуса")),
            Profession("Юрист", listOf("Услуги юриста", "Юрист")),
            Profession("Адвокат", listOf("Услуги адвоката", "Адвокат")),
            Profession("Программист", listOf("Программист", "Photoshop", "Фотошоп", "1с программист")),
            Profession("Логопед", listOf("Логопед", "Недостатки речи", "Говорить правильно")),
            Profession("Массажист", listOf("Массажист", "Массаж", "Сделать массаж", "Массажировать", "Антицеллюлитный массаж", "Лечебный массаж", "Обертывания")),
            Profession("Психолог", listOf("Психолог", "Психологоичская помощь", "Помощь психолога")),
            Profession("Репетитор", listOf("Репетитор", "Русский язык", "Физика", "Химия", "Английский язык", "Немецкий язык", "Франзуцский язык", "Биология", "Информатика", "История")),
            Profession("Воспитатель", listOf("Воспитатель", "Работа с детьми", "Дети", "Ребенок")),
            Profession("Кинолог", listOf("Кинолог", "Научить собаку", "Воспитать собаку", "Команды собаке")),
            Profession("Мебельщик", listOf("Мебельщик","Сборка мебели", "Собрать мебель")),
            Profession("Штукатур", listOf("Штукатур", "Штукатурные работы", "Оштукатурить стену",)),
            Profession("Отделочник", listOf("Отделочник", "Отделка помещений", "Фасадные работы")),
            Profession("Компьютерный мастер", listOf("Компьютерный мастер", "Сделать компьютер", "Компьютер", "Отремонтировать компьютер", "Ремонт компьютеров", "Работа с компьютером")),
            Profession("Курьер", listOf("Курьер", "Доставить", "Привезти", "Передать")),
            Profession("Мастер маникюра", listOf("Мастер маникюра", "Ногти", "Сделать ногти", "Накрасить ногти", "Педикюр", "Маникюр", "Наращивание ногтей", "Аппаратный маникюр", "Дизайн ногтей", "Комбинированный маникюр")),
            Profession("Дизайнер", listOf("Дизайнер","Дизайн")),
            Profession("Парикмахер", listOf("Парикмахер", "Стрижка", "Мужские стрижки", "Женские стрижки","Детские стрижки","Мелирование","Завивка", "Покрасить волосы", "Окрашивание волос", "Укладка волос", "Колорирование", "Прическа", "Сдеалть прическу")),
            Profession("Стилист", listOf("Стилист", "Стиль")),
            Profession("Барбер", listOf("Барбер", "Бритье","Мужские стрижки","Стрижка","Борода", "Побрить", "Подстричь", "Стрижка бороды")),
            Profession("Видеооператор", listOf("Видеооператор",)),
            Profession("Тамада", listOf("Тамада",)),
            Profession("Тату мастер", listOf("Тату мастер", "Тату", "Сделать татуировку", "Сделать тату", "Набить тату", "Нанесение тату")),
            Profession("Переводчик", listOf("Переводчик",)),
            Profession("Автомаляр", listOf("Автомаляр","Покрасить машину", "Подкрасить машину", "Полировка авто")),
            Profession("Автоэлектрик", listOf("Автоэлектрик", "Проводка")),
            Profession("Косметолог", listOf("Автоэлектрик", "Проводка")),
            Profession("Детский учитель", listOf("Детский учитель")),
            Profession("Автоподборщик", listOf("Автоподборщик",)),
            Profession("Страховой агент", listOf("Страховой агент",)),
            Profession("Администратор", listOf("Администратор",)),
            Profession("Архитектор", listOf("Архитектор",)),
            Profession("Астролог", listOf("Астролог",)),
            Profession("Астролог", listOf("Астролог",)),
            Profession("Гадалка", listOf("Гадалка",)),
            Profession("Гравер", listOf("Гравер",)),
            Profession("Грузчик", listOf("Грузчик",)),
            Profession("Дворник", listOf("Дворник",)),
            Profession("Замерщик", listOf("Замерщик",)),
            Profession("Клинер", listOf("Клинер",)),
            Profession("Кондитер", listOf("Кондитер",)),
            Profession("Консультант", listOf("Кондитер",)),
            Profession("Кузнец", listOf("Кузнец",)),
            Profession("Телефонный мастер", listOf("Телефонный мастер",)),
            Profession("Водитель инженерной техники", listOf("Водитель инженерной техники",)),
            Profession("Механик", listOf("Механик",)),
            Profession("Автомойщик", listOf("Автомойщик",)),
            Profession("Мойщик посуды", listOf("Мойщик посуды",)),
            Profession("Мойщик окон", listOf("Мойщик окон",)),
            Profession("Мойщик ковров", listOf("Мойщик ковров",)),
            Profession("Монтажник", listOf("Монтажник",)),
        )

    private val professionList = getAllProfession()
    fun getProfessionByName(search:String, callback: (List<Profession>) -> Unit){
        thread {
            val tempList = ArrayList<Profession>()
            for (select: Profession in professionList) {
                var counter = 0
                if (search.length <= select.name.length) {
                    for (i in search.indices) {
                        if (search[i] == select.name[i]) {
                            counter++
                        }
                        if (counter == search.length) {
                            tempList.add(select)
                            tempList.sortWith(compareBy { it.name })
                        } else {
                            tempList.remove(select)
                        }
                    }
                }
            }
            callback.invoke(tempList)
        }
    }

    fun getProfessionByKeyWords(search: String, callback:(List<Profession>) -> Unit){
        thread {
            val tempList = ArrayList<Profession>()
            for(select:Profession in professionList){
                for(chars:CharSequence in select.keyWords){
                    if(search in chars){
                        if(select !in tempList){
                            tempList.add(select)
                            tempList.sortWith(compareBy { it.name })
                        }
                    }
                }
            }
            if(search.isEmpty()){
                tempList.clear()
            }
            callback.invoke(tempList)
        }
    }
}